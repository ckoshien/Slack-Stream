<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model
	<annotation-driven validator="validator" />-->
	<tx:annotation-driven />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
  <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
  <beans:property name="url" value="${jdbc.url}" />
  <beans:property name="username" value="${jdbc.username}" />
  <beans:property name="password" value="${jdbc.password}" />
  <beans:property name="initialSize" value="10" />
  <beans:property name="maxActive" value="10" />
  <beans:property name="maxIdle" value="10" />
  <beans:property name="maxWait" value="5000" />
  <beans:property name="validationQuery" value="select count(*) from dual" />
</beans:bean>

<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  <beans:property name="dataSource" ref="dataSource"/>
</beans:bean>

<beans:bean id="connectionProvider" class="jp.sf.amateras.mirage.integration.spring.SpringConnectionProvider">
  <beans:property name="transactionManager" ref="transactionManager" />
</beans:bean>

<beans:bean id="dialect" class="jp.sf.amateras.mirage.dialect.MySQLDialect" />

<beans:bean id="sqlManager" class="jp.sf.amateras.mirage.SqlManagerImpl">
  <beans:property name="connectionProvider" ref="connectionProvider" />
  <beans:property name="dialect" ref="dialect" />
</beans:bean>
<context:component-scan base-package="cx.myhome.ckoshien.slack" />
<context:property-placeholder location="classpath*:application.properties" />
<aop:aspectj-autoproxy/>
<!--  <aop:config>
	<aop:advisor pointcut="@annotation(cx.myhome.ckoshien.ranbato.annotation.LoginConfAnnotation)"
	 advice-ref="loginConfInterceptor"></aop:advisor>
</aop:config>
-->
<!--   スケジューラ定義   -->
<task:annotation-driven scheduler="scheduler"/>
<task:scheduler id="scheduler" pool-size="1"/>
</beans:beans>
